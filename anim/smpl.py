"""
smpl.py

JOINT_NAMES, SMPLH_JOINT_NAMES, SMPL_JOINT_NAMES are from \
https://github.com/vchoutas/smplx/blob/main/smplx/joint_names.py
"""

from __future__ import annotations

from pathlib import Path
import numpy as np
from util.load import pickle_load

JOINT_NAMES = [
    "pelvis",
    "left_hip",
    "right_hip",
    "spine1",
    "left_knee",
    "right_knee",
    "spine2",
    "left_ankle",
    "right_ankle",
    "spine3",
    "left_foot",
    "right_foot",
    "neck",
    "left_collar",
    "right_collar",
    "head",
    "left_shoulder",
    "right_shoulder",
    "left_elbow",
    "right_elbow",
    "left_wrist",
    "right_wrist",
    "jaw",
    "left_eye_smplhf",
    "right_eye_smplhf",
    "left_index1",
    "left_index2",
    "left_index3",
    "left_middle1",
    "left_middle2",
    "left_middle3",
    "left_pinky1",
    "left_pinky2",
    "left_pinky3",
    "left_ring1",
    "left_ring2",
    "left_ring3",
    "left_thumb1",
    "left_thumb2",
    "left_thumb3",
    "right_index1",
    "right_index2",
    "right_index3",
    "right_middle1",
    "right_middle2",
    "right_middle3",
    "right_pinky1",
    "right_pinky2",
    "right_pinky3",
    "right_ring1",
    "right_ring2",
    "right_ring3",
    "right_thumb1",
    "right_thumb2",
    "right_thumb3",
    "nose",
    "right_eye",
    "left_eye",
    "right_ear",
    "left_ear",
    "left_big_toe",
    "left_small_toe",
    "left_heel",
    "right_big_toe",
    "right_small_toe",
    "right_heel",
    "left_thumb",
    "left_index",
    "left_middle",
    "left_ring",
    "left_pinky",
    "right_thumb",
    "right_index",
    "right_middle",
    "right_ring",
    "right_pinky",
    "right_eye_brow1",
    "right_eye_brow2",
    "right_eye_brow3",
    "right_eye_brow4",
    "right_eye_brow5",
    "left_eye_brow5",
    "left_eye_brow4",
    "left_eye_brow3",
    "left_eye_brow2",
    "left_eye_brow1",
    "nose1",
    "nose2",
    "nose3",
    "nose4",
    "right_nose_2",
    "right_nose_1",
    "nose_middle",
    "left_nose_1",
    "left_nose_2",
    "right_eye1",
    "right_eye2",
    "right_eye3",
    "right_eye4",
    "right_eye5",
    "right_eye6",
    "left_eye4",
    "left_eye3",
    "left_eye2",
    "left_eye1",
    "left_eye6",
    "left_eye5",
    "right_mouth_1",
    "right_mouth_2",
    "right_mouth_3",
    "mouth_top",
    "left_mouth_3",
    "left_mouth_2",
    "left_mouth_1",
    "left_mouth_5",  # 59 in OpenPose output
    "left_mouth_4",  # 58 in OpenPose output
    "mouth_bottom",
    "right_mouth_4",
    "right_mouth_5",
    "right_lip_1",
    "right_lip_2",
    "lip_top",
    "left_lip_2",
    "left_lip_1",
    "left_lip_3",
    "lip_bottom",
    "right_lip_3",
    # Face contour
    "right_contour_1",
    "right_contour_2",
    "right_contour_3",
    "right_contour_4",
    "right_contour_5",
    "right_contour_6",
    "right_contour_7",
    "right_contour_8",
    "contour_middle",
    "left_contour_8",
    "left_contour_7",
    "left_contour_6",
    "left_contour_5",
    "left_contour_4",
    "left_contour_3",
    "left_contour_2",
    "left_contour_1",
]

VMD_JOINT_NAMES = [
    "センター",
    "足.L",
    "足.R",
    "上半身",
    "ひざ.L",
    "ひざ.R",
    "上半身2",
    "足首.L",
    "足首.R",
    "spine3",
    "つま先.L",
    "つま先.R",
    "首",
    "肩.L",
    "肩.R",
    "頭",
    "腕.L",
    "腕.R",
    "ひじ.L",
    "ひじ.R",
    "手首.L",
    "手首.R",
    "人指１.L",
    "人指２.L",
    "人指３.L",
    "中指１.L",
    "中指２.L",
    "中指３.L",
    "小指１.L",
    "小指２.L",
    "小指３.L",
    "薬指１.L",
    "薬指２.L",
    "薬指３.L",
    "親指０.L",
    "親指１.L",
    "親指２.L",
    "人指１.R",
    "人指２.R",
    "人指３.R",
    "中指１.R",
    "中指２.R",
    "中指３.R",
    "小指１.R",
    "小指２.R",
    "小指３.R",
    "薬指１.R",
    "薬指２.R",
    "薬指３.R",
    "親指０.R",
    "親指１.R",
    "親指２.R",
    "nose",
    "right_eye",
    "left_eye",
    "right_ear",
    "left_ear",
    "left_big_toe",
    "left_small_toe",
    "left_heel",
    "right_big_toe",
    "right_small_toe",
    "right_heel",
    "left_thumb",
    "left_index",
    "left_middle",
    "left_ring",
    "left_pinky",
    "right_thumb",
    "right_index",
    "right_middle",
    "right_ring",
    "right_pinky",
]

SMPLH_JOINT_NAMES = [
    "pelvis",
    "left_hip",
    "right_hip",
    "spine1",
    "left_knee",
    "right_knee",
    "spine2",
    "left_ankle",
    "right_ankle",
    "spine3",
    "left_foot",
    "right_foot",
    "neck",
    "left_collar",
    "right_collar",
    "head",
    "left_shoulder",
    "right_shoulder",
    "left_elbow",
    "right_elbow",
    "left_wrist",
    "right_wrist",
    "left_index1",
    "left_index2",
    "left_index3",
    "left_middle1",
    "left_middle2",
    "left_middle3",
    "left_pinky1",
    "left_pinky2",
    "left_pinky3",
    "left_ring1",
    "left_ring2",
    "left_ring3",
    "left_thumb1",
    "left_thumb2",
    "left_thumb3",
    "right_index1",
    "right_index2",
    "right_index3",
    "right_middle1",
    "right_middle2",
    "right_middle3",
    "right_pinky1",
    "right_pinky2",
    "right_pinky3",
    "right_ring1",
    "right_ring2",
    "right_ring3",
    "right_thumb1",
    "right_thumb2",
    "right_thumb3",
    "nose",
    "right_eye",
    "left_eye",
    "right_ear",
    "left_ear",
    "left_big_toe",
    "left_small_toe",
    "left_heel",
    "right_big_toe",
    "right_small_toe",
    "right_heel",
    "left_thumb",
    "left_index",
    "left_middle",
    "left_ring",
    "left_pinky",
    "right_thumb",
    "right_index",
    "right_middle",
    "right_ring",
    "right_pinky",
]

SMPL_JOINT_NAMES = [
    "pelvis",
    "left_hip",
    "right_hip",
    "spine1",
    "left_knee",
    "right_knee",
    "spine2",
    "left_ankle",
    "right_ankle",
    "spine3",
    "left_foot",
    "right_foot",
    "neck",
    "left_collar",
    "right_collar",
    "head",
    "left_shoulder",
    "right_shoulder",
    "left_elbow",
    "right_elbow",
    "left_wrist",
    "right_wrist",
    "left_hand",
    "right_hand",
]

def load_model(model_path: Path, gender: str=None):
    if isinstance(model_path, str):
        model_path = Path(model_path)
    if model_path.suffix == "":
        model_path = model_path / gender / "model.npz"
    match model_path.suffix:
        case ".npz":
            model_dict = np.load(model_path, allow_pickle=True)
        case ".pkl":
            try:
                model_dict = pickle_load(model_path)
            except:
                model_dict = pickle_load(model_path, encoding="latin1")
        case _ :  
            ValueError("This file is not supported.")
    return model_dict

def calc_skel_offsets(
        betas: np.ndarray,
        J_regressor: np.ndarray,
        shapedirs: np.ndarray,
        v_template: np.ndarray,
) -> np.ndarray:
    """
    args:
        betas (np.ndarray): body shape parameters of SMPL. shape: (num_betas).
        J_regressor (np.ndarray): Joint regressor from SMPL vertices. shape: (num_J, num_vertices).
        shapedirs (np.ndarray): Matrix to convert from PCA (betas) to SMPL blendshapes. shape: (num_vertices, 3, num_betas).
        v_template (np.ndarray): Template body vertices of SMPL. shape: (num_vertices, 3).
    return:
        joints (np.ndarray): Offset joint positons in 3D space (absolute coordinates). shape: (num_J, 3).
    """
    num_betas = min(len(betas), shapedirs.shape[-1])
    betas, shapedirs = betas[:num_betas], shapedirs[..., :num_betas]
    blendshape = shapedirs @ betas
    vertices = v_template + blendshape
    joints = J_regressor @ vertices

    return joints

